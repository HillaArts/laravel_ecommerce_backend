name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the backend code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Dockerize the backend
      - name: Build Docker image for backend
        run: |
          docker build -t backend-image:latest .

      # Log in to Docker Hub (or any container registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker tag backend-image:latest hillaarts/backend-image:latest
          docker push hillaarts/backend-image:latest

      # Deploy the app to the server using SSH
      - name: Deploy to Server
        run: |
          # Ensure private key file exists and has correct permissions
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_private_key
          chmod 600 /tmp/ssh_private_key

          # Create the .ssh directory if it doesn't exist
          mkdir -p /home/runner/.ssh

          # Add the server's SSH key to known hosts to avoid authenticity prompts
          ssh-keyscan -H 35.153.33.107 >> /home/runner/.ssh/known_hosts

          # SSH into the server and install Docker (if not already installed)
          ssh -i /tmp/ssh_private_key ubuntu@35.153.33.107 << 'EOF'
            # Update package list and install Docker if not installed
            sudo apt-get update
            sudo apt-get install -y docker.io docker-compose

            # Add the ubuntu user to the docker group to allow Docker usage without sudo
            sudo usermod -aG docker ubuntu

            # Log out and log back in to apply group changes (automated workaround)
            newgrp docker

            # Navigate to the root directory where docker-compose.yml is located
            cd /

            # Pull the latest Docker image and restart the containers
            docker pull hillaarts/backend-image:latest
            docker-compose up -d
          EOF

          # Clean up the private key file
          rm -f /tmp/ssh_private_key
